// <auto-generated />
using System;
using Johan_Reinoso_AP1_P2.Components.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Johan_Reinoso_AP1_P2.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250715031438_agregarValores")]
    partial class agregarValores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Johan_Reinoso_AP1_P2.Components.Models.Entradas", b =>
                {
                    b.Property<int>("EntradasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradasId"));

                    b.Property<decimal>("CantidadProducida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducido")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntradasId");

                    b.ToTable("entradas");
                });

            modelBuilder.Entity("Johan_Reinoso_AP1_P2.Components.Models.EntradasDetalles", b =>
                {
                    b.Property<int>("EntradasDetallesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradasDetallesId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EntradasId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("EntradasDetallesId");

                    b.HasIndex("EntradasId");

                    b.HasIndex("ProductoId");

                    b.ToTable("entradasDetalles");
                });

            modelBuilder.Entity("Johan_Reinoso_AP1_P2.Components.Models.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EsCompuesto")
                        .HasColumnType("bit");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoId");

                    b.ToTable("productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Descripcion = "Maní",
                            EsCompuesto = false,
                            Existencia = 100,
                            Peso = 5m
                        },
                        new
                        {
                            ProductoId = 2,
                            Descripcion = "Pistachos",
                            EsCompuesto = false,
                            Existencia = 100,
                            Peso = 10m
                        },
                        new
                        {
                            ProductoId = 3,
                            Descripcion = "Almendras",
                            EsCompuesto = false,
                            Existencia = 100,
                            Peso = 8m
                        },
                        new
                        {
                            ProductoId = 4,
                            Descripcion = "Frutos Mixtos 200gr",
                            EsCompuesto = true,
                            Existencia = 0,
                            Peso = 200.00m
                        },
                        new
                        {
                            ProductoId = 5,
                            Descripcion = "Frutos Mixtos 400gr",
                            EsCompuesto = true,
                            Existencia = 0,
                            Peso = 400.00m
                        },
                        new
                        {
                            ProductoId = 6,
                            Descripcion = "Frutos Mixtos 600gr",
                            EsCompuesto = true,
                            Existencia = 0,
                            Peso = 600.00m
                        });
                });

            modelBuilder.Entity("Johan_Reinoso_AP1_P2.Components.Models.EntradasDetalles", b =>
                {
                    b.HasOne("Johan_Reinoso_AP1_P2.Components.Models.Entradas", "Entrada")
                        .WithMany("EntradasDetalles")
                        .HasForeignKey("EntradasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Johan_Reinoso_AP1_P2.Components.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Johan_Reinoso_AP1_P2.Components.Models.Entradas", b =>
                {
                    b.Navigation("EntradasDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
